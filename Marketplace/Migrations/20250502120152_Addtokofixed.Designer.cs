// <auto-generated />
using System;
using Marketplace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250502120152_Addtokofixed")]
    partial class Addtokofixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.Models.Ikan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NamaIkan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenjualId")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<int?>("TokoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PenjualId");

                    b.HasIndex("TokoId");

                    b.ToTable("Ikans");
                });

            modelBuilder.Entity("Marketplace.Models.Toko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NamaToko")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PenjualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PenjualId");

                    b.ToTable("Tokos");
                });

            modelBuilder.Entity("Marketplace.Models.Transaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IkanId")
                        .HasColumnType("int");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int");

                    b.Property<int>("PembeliId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IkanId");

                    b.HasIndex("PembeliId");

                    b.ToTable("Transaksis");
                });

            modelBuilder.Entity("Marketplace.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Marketplace.Models.Ikan", b =>
                {
                    b.HasOne("Marketplace.Models.User", "Penjual")
                        .WithMany()
                        .HasForeignKey("PenjualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Toko", "Toko")
                        .WithMany("Ikans")
                        .HasForeignKey("TokoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Penjual");

                    b.Navigation("Toko");
                });

            modelBuilder.Entity("Marketplace.Models.Toko", b =>
                {
                    b.HasOne("Marketplace.Models.User", "Penjual")
                        .WithMany()
                        .HasForeignKey("PenjualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Penjual");
                });

            modelBuilder.Entity("Marketplace.Models.Transaksi", b =>
                {
                    b.HasOne("Marketplace.Models.Ikan", "Ikan")
                        .WithMany()
                        .HasForeignKey("IkanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.User", "Pembeli")
                        .WithMany()
                        .HasForeignKey("PembeliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ikan");

                    b.Navigation("Pembeli");
                });

            modelBuilder.Entity("Marketplace.Models.Toko", b =>
                {
                    b.Navigation("Ikans");
                });
#pragma warning restore 612, 618
        }
    }
}
