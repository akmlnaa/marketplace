// <auto-generated />
using System;
using Marketplace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.Models.Ikan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Deskripsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gambar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NamaIkan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenjualId")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TanggalPublish")
                        .HasColumnType("datetime");

                    b.Property<int?>("TokoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PenjualId");

                    b.HasIndex("TokoId");

                    b.ToTable("Ikans");
                });

            modelBuilder.Entity("Marketplace.Models.Pembayaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuktiBayar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("JumlahBayar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MetodePembayaran")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("TglPembayaran")
                        .HasColumnType("datetime");

                    b.Property<int>("TransaksiId")
                        .HasColumnType("int")
                        .HasColumnName("TransaksiID");

                    b.HasKey("Id")
                        .HasName("PK__Pembayar__3214EC27F7C30285");

                    b.HasIndex("TransaksiId");

                    b.ToTable("Pembayarans");
                });

            modelBuilder.Entity("Marketplace.Models.Toko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaToko")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PenjualId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tokos__3214EC07AF922A9D");

                    b.HasIndex("PenjualId");

                    b.ToTable("Tokos");
                });

            modelBuilder.Entity("Marketplace.Models.Transaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IkanId")
                        .HasColumnType("int");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int");

                    b.Property<int>("PembeliId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transaksis", (string)null);
                });

            modelBuilder.Entity("Marketplace.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Marketplace.Models.Ikan", b =>
                {
                    b.HasOne("Marketplace.Models.User", "Penjual")
                        .WithMany()
                        .HasForeignKey("PenjualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Toko", "Toko")
                        .WithMany()
                        .HasForeignKey("TokoId");

                    b.Navigation("Penjual");

                    b.Navigation("Toko");
                });

            modelBuilder.Entity("Marketplace.Models.Pembayaran", b =>
                {
                    b.HasOne("Marketplace.Models.Transaksi", "Transaksi")
                        .WithMany("Pembayarans")
                        .HasForeignKey("TransaksiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Pembayaran_Transaksi");

                    b.Navigation("Transaksi");
                });

            modelBuilder.Entity("Marketplace.Models.Toko", b =>
                {
                    b.HasOne("Marketplace.Models.User", "Penjual")
                        .WithMany("Tokos")
                        .HasForeignKey("PenjualId")
                        .IsRequired()
                        .HasConstraintName("FK_Toko_User");

                    b.Navigation("Penjual");
                });

            modelBuilder.Entity("Marketplace.Models.Transaksi", b =>
                {
                    b.Navigation("Pembayarans");
                });

            modelBuilder.Entity("Marketplace.Models.User", b =>
                {
                    b.Navigation("Tokos");
                });
#pragma warning restore 612, 618
        }
    }
}
