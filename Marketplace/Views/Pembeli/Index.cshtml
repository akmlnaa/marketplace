@model IEnumerable<Marketplace.Models.Ikan>

@{
    Layout = "~/Views/Shared/_LayoutPembeli.cshtml";
    var currentSort = ViewBag.CurrentSort as string;
    var currentSearch = ViewBag.CurrentSearch as string;
}

<!-- Search & Sort -->
<form class="row mb-4 mt-3" method="get" asp-action="Index">
    <div class="col-md-6 mb-2">
        <input type="text" name="search" value="@currentSearch" class="form-control" placeholder="Cari nama ikan..." />
    </div>
    <div class="col-md-4 mb-2">
        <select name="sort" class="form-select">
            <option value="">Urutkan</option>
            <option value="harga_asc" selected="@(currentSort == "harga_asc")">Harga Terendah</option>
            <option value="harga_desc" selected="@(currentSort == "harga_desc")">Harga Tertinggi</option>
        </select>
    </div>
    <div class="col-md-2 mb-2">
        <button type="submit" class="btn btn-primary w-100">Terapkan</button>
    </div>
</form>

<!-- Bubble Chatbot -->
<div id="chatbot-bubble" onclick="toggleChat()" style="
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #007bff;
    color: white;
    padding: 10px 20px;
    border-radius: 50px;
    cursor: pointer;
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
    z-index: 9999;">
    Tanya SiCerdas 🤖
</div>

<!-- Chat Panel -->
<div id="chat-panel" style="
    display: none;
    position: fixed;
    bottom: 80px;
    right: 20px;
    width: 320px;
    height: 480px;
    background: white;
    border: 1px solid #ccc;
    border-radius: 15px;
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    padding: 10px;
    z-index: 9998;
    display: flex;
    flex-direction: column;
">
    <div id="chat-messages" style="
        flex: 1;
        overflow-y: auto;
        margin-bottom: 10px;
        font-size: 14px;
    "></div>

    <div class="input-group">
        <input type="text" id="user-input" class="form-control" placeholder="Ketik pertanyaan..." />
        <button class="btn btn-primary" onclick="sendQuestion()">Kirim</button>
    </div>
</div>

<script>
    function toggleChat() {
        const panel = document.getElementById("chat-panel");
        panel.style.display = panel.style.display === "none" ? "flex" : "none";
    }

    async function sendQuestion() {
        const input = document.getElementById("user-input");
        const question = input.value.trim();
        if (!question) return;

        appendMessage("🧑‍💬 Kamu", question);
        input.value = "";

        try {
            const response = await fetch('/api/Gemini/Ajukan', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ question: question })
            });

            if (!response.ok) throw new Error("Network response was not ok");

            const answer = await response.text();
            appendMessage("🤖 Gemini", answer);
        } catch (error) {
            console.error("Gagal:", error);
            appendMessage("🤖 Gemini", "Maaf, terjadi kesalahan.");
        }
    }

    function appendMessage(sender, message) {
        const chat = document.getElementById("chat-messages");
        const msg = document.createElement("div");
        msg.innerHTML = `<strong>${sender}:</strong> <div style="white-space: pre-wrap;">${message}</div><hr/>`;
        chat.appendChild(msg);
        chat.scrollTop = chat.scrollHeight;
    }
</script>


<!-- Daftar Ikan -->
@if (!Model.Any())
{
    <div class="alert alert-warning text-center">Ikan tidak ditemukan.</div>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var ikan in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-0 hover-shadow">
                    <img src="@ikan.Gambar" class="card-img-top" alt="@ikan.NamaIkan" style="height: 200px; object-fit: cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-primary">@ikan.NamaIkan</h5>
                        <p class="card-text mb-1"><strong>Rp @ikan.Harga.ToString("N0")</strong></p>
                        <span class="badge bg-success mb-2">Stok: @ikan.Stok</span>

                        @{
                            var rataRating = ikan.Ratings != null && ikan.Ratings.Any() ? ikan.Ratings.Average(r => r.Nilai) : 0;
                            var bintangUtuh = (int)Math.Floor(rataRating);
                            var setengahBintang = rataRating - bintangUtuh >= 0.5;
                            var sisaKosong = 5 - bintangUtuh - (setengahBintang ? 1 : 0);
                        }

                        <div class="mb-2 text-warning">
                            @for (int i = 0; i < bintangUtuh; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                            @if (setengahBintang)
                            {
                                <i class="fas fa-star-half-alt"></i>
                            }
                            @for (int i = 0; i < sisaKosong; i++)
                            {
                                <i class="far fa-star"></i>
                            }
                            <small class="text-muted">(@rataRating.ToString("0.0"))</small>
                        </div>

                        <a href="@Url.Action("AddToCart", "Transaksi", new { ikanId = ikan.Id })" class="btn btn-outline-success mb-2 w-100">
                            <i class="fas fa-cart-plus me-1"></i> Tambah ke Keranjang
                        </a>

                        <a href="@Url.Action("Detail", "Ikan", new { id = ikan.Id })" class="btn btn-info w-100">
                            <i class="fas fa-eye me-1"></i> Lihat Detail
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
}

<style>
    .hover-shadow:hover {
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        transition: 0.3s ease-in-out;
    }

    .navbar-nav .nav-item .nav-link {
        font-size: 18px;
        text-align: center;
        color: white;
    }

        .navbar-nav .nav-item .nav-link:hover {
            text-decoration: underline;
        }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .btn-outline-success:hover {
        background-color: #28a745;
        color: white;
    }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
    }

    .fa-star, .fa-star-half-alt, .far.fa-star {
        margin-right: 2px;
    }
</style>
